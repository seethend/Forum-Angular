{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-header/app-header.component.css","webpack:///./src/app/app-header/app-header.component.html","webpack:///./src/app/app-header/app-header.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authenticate/authenticate.component.css","webpack:///./src/app/authenticate/authenticate.component.html","webpack:///./src/app/authenticate/authenticate.component.ts","webpack:///./src/app/authenticate/authenticate.service.ts","webpack:///./src/app/authenticate/login/login.component.css","webpack:///./src/app/authenticate/login/login.component.html","webpack:///./src/app/authenticate/login/login.component.ts","webpack:///./src/app/authenticate/signup/signup.component.css","webpack:///./src/app/authenticate/signup/signup.component.html","webpack:///./src/app/authenticate/signup/signup.component.ts","webpack:///./src/app/discussions/discussions.component.css","webpack:///./src/app/discussions/discussions.component.html","webpack:///./src/app/discussions/discussions.component.ts","webpack:///./src/app/discussions/topic/show-topic/show-topic.component.css","webpack:///./src/app/discussions/topic/show-topic/show-topic.component.html","webpack:///./src/app/discussions/topic/show-topic/show-topic.component.ts","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-item/topic-item.component.css","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-item/topic-item.component.html","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-item/topic-item.component.ts","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-list.component.css","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-list.component.html","webpack:///./src/app/discussions/topic/show-topic/topic-list/topic-list.component.ts","webpack:///./src/app/discussions/topic/topic-details/topic-details.component.css","webpack:///./src/app/discussions/topic/topic-details/topic-details.component.html","webpack:///./src/app/discussions/topic/topic-details/topic-details.component.ts","webpack:///./src/app/discussions/topic/topic.component.css","webpack:///./src/app/discussions/topic/topic.component.html","webpack:///./src/app/discussions/topic/topic.component.ts","webpack:///./src/app/discussions/topic/topic.model.ts","webpack:///./src/app/discussions/topic/topic.service.ts","webpack:///./src/app/discussions/topic/write-topic/write-topic.component.css","webpack:///./src/app/discussions/topic/write-topic/write-topic.component.html","webpack:///./src/app/discussions/topic/write-topic/write-topic.component.ts","webpack:///./src/app/docker/docker.component.css","webpack:///./src/app/docker/docker.component.html","webpack:///./src/app/docker/docker.component.ts","webpack:///./src/app/docker/post-details/post-details.component.css","webpack:///./src/app/docker/post-details/post-details.component.html","webpack:///./src/app/docker/post-details/post-details.component.ts","webpack:///./src/app/docker/posts/posts.component.css","webpack:///./src/app/docker/posts/posts.component.html","webpack:///./src/app/docker/posts/posts.component.ts","webpack:///./src/app/docker/posts/posts.model.ts","webpack:///./src/app/docker/posts/posts.service.ts","webpack:///./src/app/docker/posts/show-post/post-list/post-item/post-item.component.css","webpack:///./src/app/docker/posts/show-post/post-list/post-item/post-item.component.html","webpack:///./src/app/docker/posts/show-post/post-list/post-item/post-item.component.ts","webpack:///./src/app/docker/posts/show-post/post-list/post-list.component.css","webpack:///./src/app/docker/posts/show-post/post-list/post-list.component.html","webpack:///./src/app/docker/posts/show-post/post-list/post-list.component.ts","webpack:///./src/app/docker/posts/show-post/show-post.component.css","webpack:///./src/app/docker/posts/show-post/show-post.component.html","webpack:///./src/app/docker/posts/show-post/show-post.component.ts","webpack:///./src/app/docker/posts/write-post/write-post.component.css","webpack:///./src/app/docker/posts/write-post/write-post.component.html","webpack:///./src/app/docker/posts/write-post/write-post.component.ts","webpack:///./src/app/groups/groups.component.css","webpack:///./src/app/groups/groups.component.html","webpack:///./src/app/groups/groups.component.ts","webpack:///./src/app/guards/authenticate.guard.ts","webpack:///./src/app/pipes/shorten.pipe.ts","webpack:///./src/app/profile/about/about.component.css","webpack:///./src/app/profile/about/about.component.html","webpack:///./src/app/profile/about/about.component.ts","webpack:///./src/app/profile/friends/friends.component.css","webpack:///./src/app/profile/friends/friends.component.html","webpack:///./src/app/profile/friends/friends.component.ts","webpack:///./src/app/profile/photos/photos.component.css","webpack:///./src/app/profile/photos/photos.component.html","webpack:///./src/app/profile/photos/photos.component.ts","webpack:///./src/app/profile/profile-posts/profile-posts.component.css","webpack:///./src/app/profile/profile-posts/profile-posts.component.html","webpack:///./src/app/profile/profile-posts/profile-posts.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.service.ts","webpack:///./src/app/projects/projects.component.css","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/side-header/side-header.component.css","webpack:///./src/app/side-header/side-header.component.html","webpack:///./src/app/side-header/side-header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#home-search {\\n  display: inline;\\n  width: 500px;\\n  height: 50px;\\n  left: 15px;\\n  padding: 6px 20px;\\n  font-size: 20px;\\n  line-height: 1.42857143;\\n  color: white;\\n  background: transparent none;\\n  border: none;\\n  /*border-bottom: 1px solid grey;*/\\n  outline: none;\\n}\\n\\n#home-search:focus {\\n  box-shadow: none;\\n}\\n\\n.my-navbar {\\n    background-color: #1e2642;\\n    border: none;\\n}\\n\\n.icon-bar {\\n  border: 1px solid white;\\n}\\n\\n.right-nav-icons {\\n  color: white;\\n}\\n\\n.nav>li>a:focus, .nav>li>a:hover {\\n  text-decoration: none;\\n  background-color: transparent;\\n  color: #d8d8d8;\\n}\\n\\n.glyphicon-search{\\n  color: white;\\n  top: 3px;\\n  left: 15px;\\n  font-size: 20px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar my-navbar\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <span class=\\\"glyphicon glyphicon-search\\\"></span><input id=\\\"home-search\\\" type=\\\"text\\\" placeholder=\\\"Search....\\\">\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\" *ngIf=\\\"!isUserLogged\\\">\\n        <li>\\n            <a href=\\\"#\\\" [routerLink] = \\\"['/', 'auth', 'signup']\\\" class=\\\"right-nav-icons\\\">\\n                <span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up\\n            </a>\\n        </li>\\n        <li>\\n            <a href=\\\"#\\\" [routerLink] = \\\"['/', 'auth', 'login']\\\" class=\\\"right-nav-icons\\\">\\n                <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login\\n            </a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\" *ngIf=\\\"isUserLogged\\\">\\n        <li>\\n            <a href=\\\"#\\\" [routerLink] = \\\"['/']\\\" class=\\\"right-nav-icons\\\">\\n                <span class=\\\"glyphicon glyphicon-user\\\"></span> {{ userLoggedIn.last_name }} {{ userLoggedIn.first_name }} \\n            </a>\\n        </li>\\n        <li>\\n            <a (click)=\\\"logout()\\\" class=\\\"right-nav-icons\\\">\\n                <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout\\n            </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate/authenticate.service';\nimport { User } from '../user-details/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.css']\n})\nexport class AppHeaderComponent implements OnInit {\n\n    constructor(private authService: AuthenticateService) { }\n\n    userLoggedIn: User; // Stores logged in user object\n    isUserLogged = false; // flag for user logged in\n\n    ngOnInit() {\n        this.waitForUserCheck(); // Calling once in the begining\n    }\n\n    // This method is responsible for changing the header if user is logged in or logged out\n    waitForUserCheck(): any {\n        this.authService.appHeaderUserSubject.subscribe(\n            (isUserLogged: boolean) => {\n                if (isUserLogged) {\n                    this.isUserLogged = isUserLogged;\n                    this.userLoggedIn = this.authService.loggedInUser;\n                }\n                setTimeout(this.waitForUserCheck(), 15000); // Arms the same method after 15sec to change back when user logged out\n            }\n        );\n    }\n\n    logout() {\n        this.authService.logout();\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { DockerComponent } from './docker/docker.component';\nimport { PostDetailsComponent } from './docker/post-details/post-details.component';\nimport {AuthenticateComponent} from './authenticate/authenticate.component';\nimport {LoginComponent} from './authenticate/login/login.component';\nimport {SignupComponent} from './authenticate/signup/signup.component';\nimport { DiscussionsComponent } from './discussions/discussions.component';\nimport { ShowTopicComponent } from './discussions/topic/show-topic/show-topic.component';\nimport { WriteTopicComponent } from './discussions/topic/write-topic/write-topic.component';\nimport { TopicDetailsComponent } from './discussions/topic/topic-details/topic-details.component';\nimport { TopicComponent } from './discussions/topic/topic.component';\nimport {TopicListComponent} from './discussions/topic/show-topic/topic-list/topic-list.component';\nimport {AuthenticateGuard} from './guards/authenticate.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AboutComponent } from './profile/about/about.component';\nimport { ProfilePostsComponent } from './profile/profile-posts/profile-posts.component';\nimport { FriendsComponent } from './profile/friends/friends.component';\nimport { PhotosComponent } from './profile/photos/photos.component';\nimport { WritePostComponent } from './docker/posts/write-post/write-post.component';\n\nconst appRoutes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'auth/login'},\n  {path: 'posts', component: DockerComponent, children: [\n    {path: 'createpost', component: WritePostComponent},\n    {path: ':id', component: PostDetailsComponent}\n  ], canActivate: [AuthenticateGuard], canActivateChild: [AuthenticateGuard]},\n  {path: 'discussions', component: DiscussionsComponent, children: [\n    {path: '', component: TopicComponent, children: [\n      {path: 'newtopic', component: WriteTopicComponent},\n      {path: 'topic/:id', component: TopicDetailsComponent},\n      {path: 'topics', component: ShowTopicComponent, children: [\n          {path: ':topic', component: TopicListComponent}\n        ]}\n    ]}\n  ], canActivate: [AuthenticateGuard], canActivateChild: [AuthenticateGuard]},\n  {path: 'profile', component: ProfileComponent, children: [\n        {path: 'posts', component: ProfilePostsComponent},\n        {path: 'about', component: AboutComponent},\n        {path: 'friends', component: FriendsComponent},\n        {path: 'photos', component: PhotosComponent}\n    ], canActivate: [AuthenticateGuard], canActivateChild: [AuthenticateGuard]},\n  {path: 'auth', component: AuthenticateComponent, children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'signup', component: SignupComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \".side-header{\\n    position: fixed;\\n    height: 100%;\\n}\\n\\n.top-header{\\n    position: fixed;\\n    z-index: 1000;\\n    padding-right: 0;\\n    padding-left: 0;\\n}\\n\\n.dynamic-window{\\n    background: #1a2036;\\n    position: relative;\\n    height: 550px;\\n    margin-top: 5%;\\n    margin-left: 200px;\\n    border-radius: 20px;\\n    overflow: auto;\\n    width: 85%;\\n}\\n\\n@media only screen and (max-width: 1050px) {\\n    .top-header {\\n      width: 100%;\\n    }\\n\\n    .dynamic-window{\\n        width: 85%;\\n        margin-left: 10px;\\n    }\\n\\n    .col-md-offset-2 {\\n        margin-left: 0;\\n        width: 100%;\\n    }\\n  }\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2 side-header\\\">\\n        <app-side-header></app-side-header>\\n    </div>\\n    <div class=\\\"col-md-10 col-md-offset-2 top-header\\\">\\n      <app-header></app-header>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 col-md-offset-2 dynamic-window\\\">\\n      <!-- <app-docker></app-docker> -->\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport { AppHeaderComponent } from './app-header/app-header.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { SideHeaderComponent } from './side-header/side-header.component';\nimport { DockerComponent } from './docker/docker.component';\nimport { PostsComponent } from './docker/posts/posts.component';\nimport { WritePostComponent } from './docker/posts/write-post/write-post.component';\nimport { ShowPostComponent } from './docker/posts/show-post/show-post.component';\nimport { PostListComponent } from './docker/posts/show-post/post-list/post-list.component';\nimport { PostItemComponent } from './docker/posts/show-post/post-list/post-item/post-item.component';\nimport { PostServices } from './docker/posts/posts.service';\nimport { PostDetailsComponent } from './docker/post-details/post-details.component';\nimport {ShortenPipe} from './pipes/shorten.pipe';\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\nimport { SignupComponent } from './authenticate/signup/signup.component';\nimport { LoginComponent } from './authenticate/login/login.component';\nimport { DiscussionsComponent } from './discussions/discussions.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TopicComponent } from './discussions/topic/topic.component';\nimport { TopicDetailsComponent } from './discussions/topic/topic-details/topic-details.component';\nimport { ShowTopicComponent } from './discussions/topic/show-topic/show-topic.component';\nimport { WriteTopicComponent } from './discussions/topic/write-topic/write-topic.component';\nimport { TopicListComponent } from './discussions/topic/show-topic/topic-list/topic-list.component';\nimport { TopicItemComponent } from './discussions/topic/show-topic/topic-list/topic-item/topic-item.component';\nimport { TopicService } from './discussions/topic/topic.service';\nimport {AuthenticateService} from './authenticate/authenticate.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticateGuard} from './guards/authenticate.guard';\nimport { AboutComponent } from './profile/about/about.component';\nimport { FriendsComponent } from './profile/friends/friends.component';\nimport { PhotosComponent } from './profile/photos/photos.component';\nimport { ProfilePostsComponent } from './profile/profile-posts/profile-posts.component';\nimport { ProfileService } from './profile/profile.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppHeaderComponent,\n    SideHeaderComponent,\n    DockerComponent,\n    PostsComponent,\n    WritePostComponent,\n    ShowPostComponent,\n    PostListComponent,\n    PostItemComponent,\n    PostDetailsComponent,\n    ShortenPipe,\n    AuthenticateComponent,\n    SignupComponent,\n    LoginComponent,\n    DiscussionsComponent,\n    ProfileComponent,\n    GroupsComponent,\n    ProjectsComponent,\n    SettingsComponent,\n    TopicComponent,\n    TopicDetailsComponent,\n    ShowTopicComponent,\n    WriteTopicComponent,\n    TopicListComponent,\n    TopicItemComponent,\n    AboutComponent,\n    FriendsComponent,\n    PhotosComponent,\n    ProfilePostsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthenticateService, AuthenticateGuard, PostServices, TopicService, ProfileService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authenticate',\n  templateUrl: './authenticate.component.html',\n  styleUrls: ['./authenticate.component.css']\n})\nexport class AuthenticateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {RequestOptions} from '@angular/http';\nimport {Subject} from 'rxjs';\nimport { User } from '../user-details/user.model';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthenticateService {\n\n  token: string = null; // Stores valid JWT token from response on successfull login\n\n  loginUserSubject = new Subject<boolean>(); // emits for login component\n\n  appHeaderUserSubject = new Subject<boolean>(); // emits for app header component\n\n  isUserLoggedIn: boolean; // flag to check user logged in\n\n  loggedInUser: User; // Stores user object on successfull login\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Posts credentials object to API\n  login(credentials: { username: string; password: string }) {\n    return this.http.post('login', credentials, {responseType: 'text'});\n  }\n\n  saveUser(user_signup_details: {username: string, email: string, last_name: string, first_name: string, password: string, passwordrepeat: string}){\n    return this.http.post('v1/jsonsignup', user_signup_details, {responseType: 'text'});\n  }\n\n  // Checks whether user is logged in by accessing secured resource API URL\n  checkUser(fire: boolean) {\n    if (this.token != null) {\n      const httpHeaders = new HttpHeaders({'Authorization': this.token});\n      this.http.get('v1/secured/user', {headers: httpHeaders}).subscribe(\n        (response: User) => {\n          if (fire) {\n              this.loginUserSubject.next(true);\n          }\n          this.isUserLoggedIn = true;\n          this.loggedInUser = response;\n          this.appHeaderUserSubject.next(true);\n          console.log('response while checking user logged in ', response);\n        },\n        error => {\n          this.logout();\n          console.log('error while checking user logged in ', error);\n        }\n      );\n    } else {\n      this.logout();\n      console.log('first request or login token expired');\n    }\n  }\n\n  // Returns current logged in User details\n  getLoggeduser() {\n      return this.loggedInUser;\n  }\n\n  // Sets all values to default and notifies application that user is logged out when something unexpected happends\n  logout() {\n    this.loginUserSubject.next(false);\n    this.appHeaderUserSubject.next(false);\n    this.isUserLoggedIn = false;\n    this.token = null;\n    this.router.navigate(['auth', 'login']);\n  }\n}\n","module.exports = \".error-details{\\n  color: red;\\n  font-size: 11px;\\n  font-family: \\\"Trebuchet MS\\\", \\\"Verdana\\\", \\\"sans-serif\\\";\\n  font-style: italic;\\n}\\n\\n.modal-body {\\n  padding: 15px 150px;\\n}\\n\\n.modal-dialog{\\n  margin-top: 50px;\\n}\\n\\n.btn-success {\\n  margin-left: 120px;\\n}\\n\\n.btn:focus {\\n  outline: none;\\n}\\n\\n.signup__link{\\n    font-size: 1rem;\\n    font-weight: 900;\\n    text-decoration: underline;\\n    color: #337ab7;\\n}\\n\"","module.exports = \"<!--<button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open Modal</button>-->\\n\\n<!-- Modal -->\\n<!--<div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">-->\\n<div class=\\\"modal-dialog\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" [routerLink] = \\\"['/']\\\">&times;</button>\\n        <h2 class=\\\"modal-title\\\">Login</h2>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n                <!--<label class=\\\"label\\\">UserName:</label>-->\\n                <p class=\\\"error-details\\\" *ngIf=\\\"isUsernameNull\\\">Username should not be empty</p>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <!--<label class=\\\"label\\\">Password:</label>-->\\n                <p class=\\\"error-details\\\" *ngIf=\\\"isPasswordNull\\\">Password should not be empty</p>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n            </div>\\n            <div class=\\\"m-t-lg\\\">\\n                <ul class=\\\"list-inline\\\">\\n                    <li>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Login</button>\\n                    </li>\\n                    <li>\\n                        <a class=\\\"signup__link\\\" [routerLink] = \\\"['/', 'auth', 'signup']\\\">Register here..!!!</a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal-dialog\\\" [routerLink] = \\\"['/']\\\">Close</button>\\n    </div>\\n    </div>\\n\\n</div>\\n<!--</div>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticateService} from '../authenticate.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isUsernameNull = false; // false if username field is null or else true\n  isPasswordNull = false; // false if password field is null or else true\n  credentials = { username: 'seeth', password: 'seeth' }; // Credential Object used for sending to login\n\n  constructor(private authService: AuthenticateService, private router: Router) { }\n\n  ngOnInit() {\n      // This works on login component initialization to check if user already logged in\n      // If user logged in then he will be redirect to /posts\n    this.authService.loginUserSubject.subscribe(\n      (isUserLogged: boolean) => {\n        if (isUserLogged) {\n          this.router.navigate(['posts'])\n            .then(\n            () => console.log('successfully redirected to posts')\n            )\n            .catch(\n              () => console.log('something wrong with url')\n            );\n        } else {\n          console.log('first request or login token expired');\n        }\n      }\n    );\n    // called to fire loginUserSubject\n    this.authService.checkUser(true);\n  }\n\n\n  login() {\n    const username = this.credentials.username.trim();\n    const password = this.credentials.password.trim();\n\n    // Validates fields and calls login in auth service and handles the response\n    // If response is valid user will be redirect to /posts else calls logout() and clears the fields\n    if (username != null && username.length > 0) {\n      this.isUsernameNull = false;\n      if (password != null && password.length > 0) {\n        this.isPasswordNull = false;\n        this.authService.login(this.credentials).subscribe(\n          (response: string) => {\n            this.authService.token = response;\n            this.authService.isUserLoggedIn = true;\n            this.authService.checkUser(false);\n            console.log('User Logged in with ', this.credentials, 'api returned token ', this.authService.token);\n            this.router.navigate(['posts'])\n              .then(\n              () => console.log('successfully redirected to posts')\n              )\n              .catch(\n                () => console.log('something wrong with url')\n              );\n          },\n          error => {\n            console.log('something wrong with credentials ', this.credentials, error);\n            this.authService.logout();\n            this.credentials = { username: '', password: '' };\n          }\n        );\n      } else {\n        this.isPasswordNull = true;\n      }\n    } else {\n      this.isUsernameNull = true;\n    }\n  }\n}\n","module.exports = \".modal-body {\\n    padding: 5px 120px;\\n}\\n\\n.modal-dialog{\\n    margin-top: 10px;\\n}\\n\\n.modal-header {\\n    padding: 10px 20px;\\n}\\n\\nlabel {\\n    margin-bottom: 0;\\n    font-size: 13px;\\n    text-transform: uppercase;\\n    color: #404040;\\n}\\n\\n.my-form-control {\\n    display: block;\\n    width: 100%;\\n    height: 35px;\\n    padding: 6px 12px;\\n    font-size: 14px;\\n    line-height: 1.42857143;\\n    color: #555;\\n    background-color: #fff;\\n    background-image: none;    \\n    border: 1px solid transparent;\\n    border-bottom: 1px solid #8a8686;\\n    border-radius: 4px;\\n    /* -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s; */\\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\\n    /* transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s; */\\n}\\n\\n[type=\\\"text\\\"] {\\n    color: #111;\\n}\\n\\n[type=\\\"password\\\"] {\\n    color: #111;\\n}\\n\\n.btn--form {\\n    padding: 0.7rem 2.8rem;\\n    font-size: .95rem;\\n    font-weight: 600;\\n    text-transform: uppercase;\\n    color: #fff;\\n    background: #111;\\n    border-radius: 5px;\\n}\\n\\n.signin__link {\\n    font-size: 0.8rem;\\n    font-weight: 900;\\n    text-decoration: underline;\\n    color: #337ab7;\\n}\\n\\n.my-form-control:focus,\\n.my-form-control:active,\\n.btn--form:active,\\n.btn--form:focus{\\n    outline: none;\\n}\\n\\n.modal-footer{\\n    padding: 5px 25px;\\n}\"","module.exports = \"    <!--<button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Open Modal</button>-->\\n\\n    <!-- Modal -->\\n\\n    <div class=\\\"modal-dialog\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" [routerLink] = \\\"['/']\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Signup</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            \\n\\n        <div class=\\\"signup__container\\\">\\n            <div class=\\\"container__child signup__form\\\">\\n                <form method=\\\"post\\\" (submit)=\\\"submitForm()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"jamesbond007\\\" [(ngModel)]=\\\"user_signup_details.username\\\" required />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">Email*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"james.bond007@gmail.com\\\" [(ngModel)]=\\\"user_signup_details.email\\\" required />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"lastname\\\">Last Name*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"text\\\" name=\\\"lastname\\\" id=\\\"lastname\\\" placeholder=\\\"Bond\\\" [(ngModel)]=\\\"user_signup_details.last_name\\\" required />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"firstname\\\">First Name*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"text\\\" name=\\\"firstname\\\" id=\\\"firstname\\\" placeholder=\\\"James\\\" [(ngModel)]=\\\"user_signup_details.first_name\\\" required />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Password*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"********\\\" [(ngModel)]=\\\"user_signup_details.password\\\" required />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"passwordRepeat\\\">Confirm Password*</label>\\n                        <input class=\\\"my-form-control\\\" type=\\\"password\\\" name=\\\"passwordRepeat\\\" id=\\\"passwordRepeat\\\" placeholder=\\\"********\\\" [(ngModel)]=\\\"user_signup_details.passwordrepeat\\\" required />\\n                    </div>\\n                    <div class=\\\"m-t-lg\\\">\\n                        <ul class=\\\"list-inline\\\">\\n                            <li>\\n                                <input class=\\\"btn btn--form\\\" type=\\\"submit\\\" value=\\\"Register\\\" />\\n                            </li>\\n                            <li>\\n                                <a class=\\\"signin__link\\\" [routerLink] = \\\"['/', 'auth', 'login']\\\">I am already a member</a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </form>  \\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" [routerLink] = \\\"['/']\\\">Close</button>\\n        </div>\\n    </div>\\n\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  \n  user_signup_details = {username: '', email: '', last_name: '', first_name: '', password: '', passwordrepeat: ''};\n  \n\n  constructor(private authService: AuthenticateService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  submitForm(){\n    console.log(this.user_signup_details);\n    this.authService.saveUser(this.user_signup_details).subscribe(\n      (response: string) => {\n        console.log(response);\n        alert(response);\n        this.clearFields();\n      },\n      error => {\n        console.log(\"Something went wrong while registering user\", error);\n        this.clearFields();\n      }\n    );\n    \n  }\n\n  clearFields(){\n    this.user_signup_details.username = '';\n    this.user_signup_details.email = '';\n    this.user_signup_details.last_name = '';\n    this.user_signup_details.first_name = '';\n    this.user_signup_details.password = '';\n    this.user_signup_details.passwordrepeat = '';\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-discussions',\n  templateUrl: './discussions.component.html',\n  styleUrls: ['./discussions.component.css']\n})\nexport class DiscussionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".post-div{\\n    background: #101219b0;\\n    color: #adadad;\\n    margin-top: 15px;\\n    border-radius: 10px;\\n    padding: 10px 40px;\\n    border: 1px solid white;\\n}\\n\\n.pull-right{\\n    margin-top: 35px;\\n}\\n\\n@media only screen and (max-width: 1000px) {\\n    .post-div {\\n        margin: 20px;\\n        height: 130px;\\n    }\\n}\\n\\n@media only screen and (max-width: 700px) {\\n    .post-div {\\n        display: none;\\n    }\\n}\\n\"","module.exports = \"<div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 col-md-offset-1 post-div\\\">\\n            <div class=\\\"pull-left\\\">\\n                <h1>General Discussions</h1>\\n                <h4>Post your topics here..!!</h4>\\n            </div>\\n            <div class=\\\"pull-right\\\">\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/discussions', 'newtopic']\\\">Post</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n            <!--<app-topic-list></app-topic-list>-->\\n          <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TopicService } from '../topic.service';\n\n@Component({\n  selector: 'app-show-topic',\n  templateUrl: './show-topic.component.html',\n  styleUrls: ['./show-topic.component.css']\n})\nexport class ShowTopicComponent implements OnInit {\n\n  constructor(private topicService: TopicService) { }\n  ngOnInit() {\n      this.topicService.getAllTopics();\n  }\n\n}\n","module.exports = \"li{\\n    margin-top: 20px;\\n    color: #adadad;\\n    background: #1e2642;\\n    height: 100px;\\n    cursor: pointer;\\n    border: 1px groove #1e2642;\\n    outline: none;\\n}\\n\\nli:last-child hr{\\n    display: none;\\n}\\n\\nli:hover {\\n  background: #28355f;\\n}\\n\\nli:active {\\n  background: #1c233c;\\n  border: 1px groove #666567;\\n}\\n\\n.topic-heading {\\n    color: #cecece;\\n    font-size: 25px;\\n}\\n\\n.topic {\\n    float: left;\\n}\\n\\n.topic-views {\\n    float: right;\\n    margin-top: -30px;\\n    margin-right: 70px;\\n}\\n\\n.topic-comments {\\n    float: right;\\n    margin-top: -30px;\\n    margin-right: 40px;\\n}\\n\\n/* Done a lot before now just added float: right */\\n\\n/* @media only screen and (max-width: 1200px) {\\n    .topic-views {\\n        margin-left: 400px;\\n    }\\n\\n    .topic-comments {\\n        margin-left: 50px;\\n    }\\n}\\n\\n@media only screen and (max-width: 1000px) {\\n    .topic-views {\\n        margin-left: 350px;\\n    }\\n\\n    .topic-comments {\\n        margin-left: 30px;\\n    }\\n}\\n\\n@media only screen and (max-width: 800px) {\\n    .topic-views {\\n        display: none;\\n    }\\n\\n    .topic-comments {\\n        display: none;\\n    }\\n} */\\n\"","module.exports = \"<li class=\\\"list-group-item list-group-striped\\\"\\n    [routerLink] = \\\"['/', 'discussions', 'topic', topic.topicId]\\\"\\n    routerLinkActive=\\\"active\\\">\\n  <p class=\\\"topic-heading\\\"><strong>{{ topic.topicHeading}}</strong></p>\\n  <div class=\\\"topic topic-main\\\">\\n    <p>13 minutes ago by {{topic.topicByUserId}}</p>\\n  </div>\\n  <div class=\\\"topic topic-views\\\">\\n    <p>1300</p>\\n    <p>views</p>\\n  </div>\\n  <div class=\\\"topic topic-comments\\\">\\n    <p>63</p>\\n    <p>Replies</p>\\n  </div>\\n</li>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Topic } from '../../../topic.model';\n\n@Component({\n  selector: 'app-topic-item',\n  templateUrl: './topic-item.component.html',\n  styleUrls: ['./topic-item.component.css']\n})\nexport class TopicItemComponent implements OnInit {\n\n  @Input('topic') topic: Topic;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container {\\n    margin-top: 10px;\\n}\\n\\n.topic-list {\\n    padding: 10px 20px;\\n}\\n\\n@media only screen and (max-width: 1300px){\\n    .container {\\n        width: 1100px;\\n    }\\n}\\n\\n@media only screen and (max-width: 1200px){\\n    .container {\\n        width: 1000px;\\n    }\\n}\\n\\n.topic-headings {\\n    display: inline;\\n  cursor: pointer;\\n}\\n\\n.topic-headings:hover {\\n  color: #888888;\\n}\\n\\n.topic-headings:active {\\n  color: #9e9e9e;\\n}\\n\\n.topic-info{\\n  color: white;\\n  padding: 10px 20px;\\n}\\n\\n.topic-sort {\\n  color: white;\\n  padding: 10px 20px;\\n}\\n\\n.topic-select {\\n  border-radius: 10px;\\n  background: transparent;\\n  border: 1px solid #8e8e8e;\\n  color: white;\\n  padding: 5px 25px;\\n  outline: none;\\n}\\n\\noption{\\n  background: #1a2036;\\n}\\n\\n.topic-list-rows {\\n  border: 1px solid #8e8e8e;\\n  width: 97%;\\n  border-radius: 10px 10px 0px 0px;\\n}\\n\\n.topic-list-rows:last-child{\\n  border-top: transparent;\\n  border-radius: 0px 0px 10px 10px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row topic-list-rows\\\">\\n        <div class=\\\"col-md-11 topic-list\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"pull-left\\\">\\n                    <p class=\\\"topic-headings topic-info\\\">Forum</p>\\n                    <!--<p class=\\\"topic-headings topic-sort\\\">General Discussion</p>-->\\n                    <select class=\\\"topic-select\\\" (change)=\\\"showSelectedTopics(selectedValue.value)\\\" #selectedValue>\\n                      <option *ngFor=\\\"let tag of topicTags\\\" [value]=\\\"tag\\\">{{ getTagNameToDisplay(tag) }}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"pull-right\\\">\\n                    <p class=\\\"topic-headings topic-sort\\\">Most Recent</p>\\n                    <p class=\\\"topic-headings topic-sort\\\">Popular</p>\\n                    <p class=\\\"topic-headings topic-sort\\\">Top</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"isTopicsLoaded\\\" class=\\\"row topic-list-rows\\\">\\n        <div class=\\\"col-md-10 col-md-offset-1 topic-list\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <app-topic-item *ngFor=\\\"let topic of topics\\\" [topic]=\\\"topic\\\"></app-topic-item>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"!isTopicsLoaded\\\">\\n        <p>No topics to load</p>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Topic } from '../../topic.model';\nimport { TopicService } from '../../topic.service';\nimport { Subscription } from 'rxjs';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.css']\n})\nexport class TopicListComponent implements OnInit {\n\n  topics: Topic[] = [];\n  isTopicsLoaded = false;\n  topicTags = new Set<string>();\n\n  topicSubscription: Subscription;\n  selectedTopicType = 'general';\n  constructor(private topicService: TopicService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    // Gets all topics based on topic tag in url\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.selectedTopicType = params['topic'];\n        this.topicService.topicsFetched.subscribe(\n            (topicsLoaded: boolean) => {\n                if (topicsLoaded) {\n                    this.isTopicsLoaded = true;\n                    this.topics = this.topicService.getAllTopicsByType(this.selectedTopicType);\n                    this.topicTags = this.topicService.getAllTags(); // gets all tags to populate dropdown\n                } else {\n                    this.isTopicsLoaded = true;\n                    this.topics = [];\n                }\n            }\n        );\n        this.topics = this.topicService.getAllTopicsByType(this.selectedTopicType); // By default general is selected on first visit to page\n        this.topicTags = this.topicService.getAllTags(); // gets all tags to populate dropdown\n      }\n    );\n    // this.topics = this.topicService.getAllTopicsByType(this.selectedTopicType); // By default general is selected on first visit to page\n    // this.topicTags = this.topicService.getAllTags(); // gets all tags to populate dropdown\n  }\n\n  // redirect the application when user clicks on topic by appending topic id\n  showSelectedTopics(selectedValue: string) {\n    console.log('Selected Option ' + selectedValue);\n    this.router.navigate(['../', selectedValue], {relativeTo: this.route});\n  }\n\n  // Return tag name capitalizing first letter for dropdown\n  getTagNameToDisplay(tag: string ) {\n    return tag.substring(0, 1).toUpperCase() + tag.substring(1, tag.length);\n  }\n\n}\n","module.exports = \".topic-detail-container{\\n  margin: 20px;\\n  height: 500px;\\n}\\n\\n.topic-heading{\\n  background: #1e2746;\\n  color: #adadad;\\n  border: 1px solid #464646;\\n  border-radius: 10px 10px 0px 0px;\\n}\\n\\n.topic-heading p{\\n  line-height: 10px;\\n}\\n\\n.topic-summary{\\n  background: #1e2746;\\n  color: #adadad;\\n  border: 1px solid #464646;\\n  height: 350px;\\n  overflow: hidden;\\n  border-top: none;\\n  border-bottom: none;\\n}\\n\\n.topic-summary p{\\n  margin-top: 20px;\\n  line-height: 40px;\\n  font-size: 25px;\\n}\\n\\n.topic-summary:hover{\\n  overflow-y: scroll;\\n}\\n\\n.topic-comments{\\n  background: #1e2746;\\n  color: #adadad;\\n  border: 1px solid #464646;\\n  border-radius: 0px 0px 10px 10px;\\n  padding: 10px;\\n}\\n\\n.topic-comments li{\\n  display: inline;\\n  color: #9e9e9e;\\n  margin-right: 80px;\\n  cursor: pointer;\\n  padding: 10px 40px;\\n  border-radius: 5px;\\n}\\n\\n.topic-comments li:hover{\\n    background: #dcdcdc0a;\\n}\\n\\n.like-icon {\\n    margin-right: 5px;\\n    margin-bottom: 7px;\\n}\\n\\n.comment-icon {\\n    margin-right: 5px;\\n}\\n\"","module.exports = \"<div class=\\\"topic-detail-container\\\">\\n  <div class=\\\"row topic-heading\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>{{ topic.topicHeading }}</h2>\\n      <p>Posted by {{ topic.topicByUserId }}</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row topic-summary\\\">\\n    <div class=\\\"col-md-10 col-md-offset-1\\\">\\n      <p>{{ topic.topicSummary }}</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row topic-comments\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <ul>\\n        <li><img class=\\\"like-icon\\\" src=\\\"https://png.icons8.com/ios/24/B9B9B9/facebook-like.png\\\">Up Vote</li>\\n        <li><img class=\\\"comment-icon\\\" src=\\\"https://png.icons8.com/windows/24/B9B9B9/topic.png\\\">Comment</li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TopicService} from '../topic.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Topic} from '../topic.model';\n\n@Component({\n  selector: 'app-topic-details',\n  templateUrl: './topic-details.component.html',\n  styleUrls: ['./topic-details.component.css']\n})\nexport class TopicDetailsComponent implements OnInit {\n\n  topic: Topic;\n  topicId: string;\n\n  constructor(private topicService: TopicService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // Fires everytime id changes in url and gets new topic based on Id from topicService\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.topicId = params['id'];\n        this.topic = this.topicService.getTopicById(this.topicId);\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topic',\n  templateUrl: './topic.component.html',\n  styleUrls: ['./topic.component.css']\n})\nexport class TopicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Topic {\n    constructor(public topicId: string,\n                public topicHeading: string,\n                public topicType: {typeId: string, typeName: string}[],\n                public topicPostedTime: Date,\n                public topicByUserId: string,\n                public topicSummary: string) {}\n}\n","import { Topic } from './topic.model';\nimport { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthenticateService } from '../../authenticate/authenticate.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class TopicService {\n\n    constructor(private http: HttpClient, private authService: AuthenticateService) {}\n\n    topicsAPI = 'v1/secured/topics/';\n\n    topics: Topic[] = [];\n\n    singleTopic: Topic;\n    topicsByType: Topic[] = []; // Stores topic by type\n\n    topicsFetched = new Subject<boolean>();\n\n    isTopicsLoaded = false;\n\n\n    // Gets all the topics\n    getAllTopics() {\n        // return this.topics.slice();\n        const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n        this.http.get(this.topicsAPI + 'all', {headers: httpHeaders}).subscribe(\n            (topics: Topic[]) => {\n                this.topics = topics;\n                this.topicsFetched.next(true);\n                this.isTopicsLoaded = true;\n            },\n            error => {\n                console.log(error);\n                this.topicsFetched.next(false);\n                this.isTopicsLoaded = true;\n                this.authService.logout();\n            }\n        );\n    }\n\n    // Adds new topic to all topics list\n    addTopic(topic: Topic) {\n        // this.topics.push(topic);\n        topic.topicByUserId = this.authService.getLoggeduser().username;\n        console.log(topic);\n        const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n\n        this.http.post(this.topicsAPI + 'save', topic, {headers: httpHeaders}).subscribe(\n            (gotTopic: Topic) => {\n                alert('posted topic with id ' + gotTopic.topicId);\n                this.isTopicsLoaded = false;\n                this.getAllTopics();\n            },\n            error => {\n                console.log(error);\n                this.authService.logout();\n            }\n        );\n    }\n\n    // Returns single topic based on Id\n    getTopicById(topicId: string) {\n        for (const topic of this.topics) {\n            if (topic.topicId.toString() === topicId) {\n                this.singleTopic = topic;\n            }\n        }\n        return this.singleTopic;\n    }\n\n    // Returns all topics based on type\n    getAllTopicsByType(topicType: string) {\n      this.topicsByType = [];\n      for (const topic of this.topics) {\n            for (const type of topic.topicType) {\n                if (type.typeName === topicType) {\n                    this.topicsByType.push(topic);\n                }\n            }\n        }\n        return this.topicsByType.slice();\n    }\n\n\n    // Returns all topics types\n    getAllTags() {\n        const tagsList = new Set<string>();\n        for (const topic of this.topics) {\n            for (const type of topic.topicType) {\n                tagsList.add(type.typeName);\n            }\n        }\n        return tagsList;\n    }\n}\n","module.exports = \".topic-main-header{\\r\\n    color: #ececec;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.topic-sub-headers{\\r\\n    color: #c1c1c1;\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n}\\r\\n\\r\\n#topic-title{\\r\\n    height: 35px;\\r\\n    width: 800px;\\r\\n}\\r\\n\\r\\n#topic-body{\\r\\n    height: 250px;\\r\\n    width: 800px;\\r\\n    max-width: 800px;\\r\\n    min-width: 800px;\\r\\n    min-height: 250px;\\r\\n    overflow: scroll;\\r\\n}\\r\\n\\r\\n#topic-tags{\\r\\n    display: inline-block;\\r\\n    margin-right: 15px;\\r\\n    height: 35px;\\r\\n    width: 760px;\\r\\n}\\r\\n\\r\\n#btn-post-topic{\\r\\n    position: absolute;\\r\\n    right: 100px;\\r\\n    bottom: 60px;\\r\\n}\\r\\n\\r\\n.selected-topic-tags-list{\\r\\n    position: absolute;\\r\\n    left: 30px;\\r\\n    bottom: 52px;\\r\\n}\\r\\n\\r\\n.selected-topic-tags-item{\\r\\n    display: inline;\\r\\n    background: green;\\r\\n    border-radius: 5px;\\r\\n    color: white;\\r\\n    padding: 3px 15px;\\r\\n    margin: 8px;\\r\\n}\\r\\n\\r\\n.delete-selected-topic-tags{\\r\\n    color: white;\\r\\n    font-weight: 900;\\r\\n    margin-left: 10px;\\r\\n    margin-right: -5px;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.delete-selected-topic-tags:hover{\\r\\n    cursor: pointer;\\r\\n    color: blue;\\r\\n}\\r\\n\\r\\n.topic-tags-list-group{\\r\\n    display: none;\\r\\n    width: 800px;\\r\\n}\\r\\n\\r\\n.topic-tags-list-group-item{\\r\\n    font-size: 16px;\\r\\n    font-weight: 800;\\r\\n}\\r\\n\\r\\n.topic-tags-list-group-item:hover{\\r\\n    cursor: pointer;\\r\\n    color: #c1c1c1;\\r\\n    background:#0066ff;\\r\\n}\\r\\n\\r\\n.empty-field{\\r\\n    color: red;\\r\\n    font-style: italic;\\r\\n}\"","module.exports = \"<h2 class=\\\"topic-main-header\\\">Start a Topic !!!</h2>\\n\\n<h4 class=\\\"topic-sub-headers\\\">Title</h4>\\n<p class=\\\"empty-field\\\" *ngIf=\\\"isTopicTitleInputNull\\\">Should not be null</p>\\n<input id=\\\"topic-title\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"topicTitleInput\\\">\\n\\n<h4 class=\\\"topic-sub-headers\\\">Body</h4>\\n<p class=\\\"empty-field\\\" *ngIf=\\\"isTopicBodyInputNull\\\">Should not be null</p>\\n<textarea id=\\\"topic-body\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"topicBodyInput\\\"></textarea>\\n\\n<h4 class=\\\"topic-sub-headers\\\">Tags</h4>\\n<ul class=\\\"selected-topic-tags-list\\\">\\n    <li *ngFor=\\\"let selectedCurrentTag of selectedTopicTags\\\" \\n        class=\\\"selected-topic-tags-item\\\">\\n            {{selectedCurrentTag.typeName}} \\n        <a class=\\\"delete-selected-topic-tags\\\" (click)=\\\"deleteSelectedTag(selectedCurrentTag)\\\">&times;</a>\\n    </li>\\n</ul>\\n<p class=\\\"empty-field\\\" *ngIf=\\\"isTopicTagInputNull\\\">Should not be null</p>\\n<input  id=\\\"topic-tags\\\" class=\\\"form-control\\\" \\n        type=\\\"text\\\"\\n        (keydown)=\\\"showAllTopicTagsMatches()\\\" \\n        [(ngModel)]=\\\"topicTagInput\\\" >\\n<button class=\\\"btn btn-primary add-topic\\\" (click)=\\\"addTopicTag()\\\">+</button>\\n\\n<ul class=\\\"list-group topic-tags-list-group\\\" #topicTagsList>\\n    <li *ngFor=\\\"let topicTag of allTopicTagOptions\\\" \\n        class=\\\"list-group-item topic-tags-list-group-item\\\"\\n        (click)=\\\"selectCurrentTag(topicTag)\\\">{{topicTag}}</li>\\n</ul>\\n\\n<button id=\\\"btn-post-topic\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveTopic()\\\">Post your Topic</button>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { TopicService } from '../topic.service';\nimport { Topic } from '../topic.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-write-topic',\n  templateUrl: './write-topic.component.html',\n  styleUrls: ['./write-topic.component.css']\n})\nexport class WriteTopicComponent implements OnInit {\n\n    @ViewChild('topicTagsList')\n    topicTagsList: ElementRef; // all tags ul li ref\n\n    topicTitleInput = ''; // topic title field two way binding\n    topicBodyInput = ''; // topic body field two way binding\n    topicTagInput = ''; // topic tag field two way binding\n\n    isTopicTitleInputNull = false; // Check if topic title field is empty\n    isTopicBodyInputNull = false; // Check if topic body field is empty\n    isTopicTagInputNull = false; // Check if topic tag field is empty\n\n    allTopicTagOptions = []; // stores all matched tags\n    selectedTopicTags: {typeId: string, typeName: string}[] = []; // stores all selected tags\n\n\n    constructor(private topicService: TopicService, private router: Router) { }\n\n    ngOnInit() {\n    }\n\n    // Method to get all matched tags\n    showAllTopicTagsMatches() {\n        this.allTopicTagOptions = [];\n        if (this.topicTagInput.length > 2) { // doesn't allow to perform the matching action until atleast 3 letters are entered\n            this.topicTagsList.nativeElement.style.display = 'block'; // shows the matched list\n            const topicTags = this.topicService.getAllTags();\n            // console.log(topicTags, this.topicTag);\n            for (const tag of topicTags) {\n                let tagMatches = [];\n                tagMatches = tag.match(this.topicTagInput);\n                if (tagMatches != null && tagMatches.length > 0) {\n                    this.allTopicTagOptions.push(tag);\n                }\n            }\n            // console.log(this.allTopicTagOptions);\n        } else {\n            this.topicTagsList.nativeElement.style.display = 'none'; // hides the matched list\n        }\n    }\n\n    addTopicTag() {\n        let isTagPresent = false;\n        for (const topicType of this.selectedTopicTags) {\n            if (topicType.typeName === this.topicTagInput) {\n                isTagPresent = true;\n            }\n        }\n\n        if (!isTagPresent) {\n            this.selectedTopicTags.push({typeId: null, typeName: this.topicTagInput});\n        }\n\n        this.topicTagInput = '';\n        document.getElementById('topic-tags').focus();\n        this.showAllTopicTagsMatches();\n        this.checkTopicTagInputField();\n    }\n\n    // Triggers when user selects a particular tag and adds to selectedTopicTags\n    selectCurrentTag(topicTag) {\n        let isTagPresent = false;\n        for (const topicType of this.selectedTopicTags) {\n            if (topicType.typeName === topicTag) {\n                isTagPresent = true;\n            }\n        }\n\n        if (!isTagPresent) {\n            this.selectedTopicTags.push({typeId: null, typeName: topicTag});\n        }\n\n        this.topicTagInput = '';\n        document.getElementById('topic-tags').focus();\n        this.showAllTopicTagsMatches();\n        this.checkTopicTagInputField();\n        // console.log(this.selectedTopicTags)\n    }\n\n    // delete the tag from selectedTopicTags list\n    deleteSelectedTag(selectedCurrentTag) {\n        const index = this.selectedTopicTags.indexOf(selectedCurrentTag, 0);\n        if (index > -1) {\n            this.selectedTopicTags.splice(index, 1);\n        }\n        this.checkTopicTagInputField();\n        // console.log(selectedCurrentTag, this.selectedTopicTags)\n    }\n\n    // Check if any tag is selected after every entry and removal\n    checkTopicTagInputField() {\n        if (this.selectedTopicTags.length > 0) {\n            this.isTopicTagInputNull = false;\n        } else {\n            this.isTopicTagInputNull = true;\n        }\n    }\n\n    // Saves new topic after checking all the feilds are not empty\n    saveTopic() {\n        if (this.topicTitleInput.length != null && this.topicTitleInput.length > 0) {\n            this.isTopicTitleInputNull = false;\n\n            if (this.topicBodyInput.length != null && this.topicBodyInput.length > 0) {\n                this.isTopicBodyInputNull = false;\n\n                if (this.selectedTopicTags.length > 0) {\n                    this.isTopicTagInputNull = false;\n                    const topic = new Topic(null, this.topicTitleInput, this.selectedTopicTags, new Date(), '1', this.topicBodyInput);\n                    console.log(topic);\n                    this.topicService.addTopic(topic);\n                    this.topicService.topicsFetched.subscribe(\n                        (areTopicsLoaded: boolean) => {\n                            if (areTopicsLoaded) {\n                                this.router.navigate(['/', 'discussions', 'topics', 'general']);\n                            } else {\n                                console.log('something went wrong while saving topic');\n                            }\n                        },\n                        error => {\n                            console.log('something went wrong while saving topic ', error);\n                        }\n                    );\n                    // console.log(this.topicTitleInput, this.topicBodyInput, this.selectedTopicTags);\n                } else {\n                    this.isTopicTagInputNull = true;\n                }\n            } else {\n                this.isTopicBodyInputNull = true;\n            }\n        } else {\n            this.isTopicTitleInputNull = true;\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-posts></app-posts>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <!-- <app-post-details></app-post-details> -->\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-docker',\n  templateUrl: './docker.component.html',\n  styleUrls: ['./docker.component.css']\n})\nexport class DockerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".post-details-tab{\\n    background: #1e2642;\\n    border-radius: 10px;\\n    padding: 20px 40px;\\n    height: 515px;\\n    margin-bottom: 0px;\\n    overflow: hidden;\\n}\\n\\nh3 {\\n    color: #adadad;\\n}\\n\\np.lead {\\n  color: #adadad;\\n  padding: 10px 20px;\\n}\\n\\n.post-details-user-img{\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 25px;\\n  margin-right: 10px;\\n}\\n\\n.post-details-tab:hover {\\n  overflow-y: scroll;\\n}\\n\\n#post-img{\\n    margin-left: 20px;\\n    margin-bottom: 20px;\\n    width: auto;\\n    height: 250px;\\n}\\n\\nli{\\n  display: inline;\\n  color: #9e9e9e;\\n  margin-right: 80px;\\n  cursor: pointer;\\n  padding: 10px 40px;\\n  border-radius: 5px;\\n}\\n\\nli:hover{\\n    background: #dcdcdc0a;\\n}\\n\\n.like-icon {\\n    margin-right: 5px;\\n    margin-bottom: 7px;\\n}\\n\\n.comment-icon {\\n    margin-right: 5px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"postLoaded\\\" class=\\\"jumbotron post-details-tab\\\">\\n  <div class=\\\"pull-left\\\">\\n    <img class=\\\"post-details-user-img\\\" src=\\\"assets/images/seeth.jpg\\\">\\n  </div>\\n  <h3 class=\\\"display-4\\\">{{ post.postedByUserId }}</h3>\\n  <hr class=\\\"my-4\\\">\\n  <p class=\\\"lead\\\">\\n    {{ post.postDetails }}\\n  </p>\\n  <div *ngIf=\\\"post.hasImages\\\">\\n    <img *ngIf=\\\"post.hasImages\\\" [src]=\\\"getImagePath()\\\" id=\\\"post-img\\\" width=\\\"200px\\\" height=\\\"200px\\\">\\n  </div>\\n  <p>\\n    <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"#\\\" role=\\\"button\\\">Learn more</a>\\n  </p>\\n  <hr>\\n  <ul>\\n    <li><img class=\\\"like-icon\\\" src=\\\"https://png.icons8.com/ios/24/B9B9B9/facebook-like.png\\\">Like</li>\\n    <li><img class=\\\"comment-icon\\\" src=\\\"https://png.icons8.com/windows/24/B9B9B9/topic.png\\\">Comment</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { PostServices } from '../posts/posts.service';\nimport { Post } from '../posts/posts.model';\nimport { AuthenticateService } from 'src/app/authenticate/authenticate.service';\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  post: Post;\n  postLoaded = false; // flag to avoid null exception for post in template\n  id: number; // Id recieved from URL\n\n  constructor(\n    private postServices: PostServices,\n    private authServices: AuthenticateService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    // Gets post id from URL and calls postService.getPostById(id) for post object response\n    // If anything goes wrong authService.logout() is called\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.postServices.getPostById(this.id).subscribe(\n          (post: Post) => {\n            console.log(post);\n            this.postLoaded = true;\n            this.post = post;\n          },\n          error => {\n            this.postLoaded = false;\n            console.log('There is some error while fetching post by id ', error);\n            this.authServices.logout();\n            this.router.navigate(['/', 'auth', 'login']);\n          }\n        );\n      }\n    );\n  }\n\n  getImagePath() {\n    console.log('forum-bucket/posts/post_' + this.post.postId + '.png');\n    return 'forum-bucket/posts/post_' + this.post.postId + '.png';\n  }\n\n}\n","module.exports = \".display-post-textarea{\\r\\nwidth: 100%;\\r\\nheight: 50px;\\r\\nbackground: #1e2642;\\r\\nborder-radius: 10px 10px 0px 0px;\\r\\npadding: 10px 20px 0 40px;\\r\\nfont-size: 20px;\\r\\ncolor: white;\\r\\nborder: none;\\r\\nresize: none;\\r\\noutline: none;\\r\\nmargin-bottom: -5px;\\r\\n}\\r\\n\\r\\n.display-post-send {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    background: #1e2746;\\r\\n    border-radius: 0px 0px 10px 10px;\\r\\n    padding: 15px 1px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nul{\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nli{\\r\\n    float: left;\\r\\n    color: #adadad;\\r\\n    margin-left: 90px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.display-post-send-img{\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n.write-popup{\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"row\\\" (click)=\\\"popup()\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <textarea disabled placeholder=\\\"Write something....!!!\\\" class=\\\"display-post-textarea\\\"></textarea>\\n    <div class=\\\"display-post-send\\\">\\n      <ul>\\n        <li><span class=\\\"glyphicon glyphicon-picture\\\"></span>&nbsp;&nbsp;\\n          <label for=\\\"display-post-img\\\">Add Photo</label>\\n        </li>\\n        <li><span class=\\\"glyphicon glyphicon-link\\\"></span>&nbsp;&nbsp;Link Address</li>\\n        <li><img src=\\\"assets/images/post-send2.png\\\" class=\\\"display-post-send-img\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <app-show-post></app-show-post>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  popup(){\n    this.router.navigate(['createpost'], {relativeTo: this.route});\n  }\n\n}\n","export class Post {\n    constructor(public postId: number,\n                public postedByUserId: string,\n                public postDetails: string,\n                public postCreatedOn: number,\n                public postUpdatedOn: number,\n                public hasImages: boolean) {}\n}\n","import { Post } from './posts.model';\nimport { Subject } from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {AuthenticateService} from '../../authenticate/authenticate.service';\n\n@Injectable()\nexport class PostServices {\n\n    postsAPI = 'v1/secured/posts/'; // Posts module API URL\n\n    // Stores all posts from API in an array to use for future references\n    posts: Post[] = [\n      /*new Post(\"1\",\n        \"154\",\n        \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\",\n        new Date().getTime(),\n        new Date().getTime()\n      ),*/\n    ];\n    singlePost: Post;\n    postAdded = new Subject<Post[]>(); // arms to fire when a new post is added\n    postsFetched = new Subject<boolean>(); // arms to fire when all posts are fetched\n\n    constructor(private http: HttpClient, private authService: AuthenticateService) {}\n\n\n    // Saves the post received through parameter\n    // On save success calls fetchPosts()\n    // If anything goes wrong authService.logout() is called\n    savePost(post: Post, fileName: string, fileString: string) {\n        console.log(post);\n        const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n        this.http.post(this.postsAPI + 'save', post, {headers: httpHeaders}).subscribe(\n          (post: Post) => {\n                this.fetchPosts('NEW_POST_ADDED');\n                if(post.hasImages && fileString != null && fileString.length > 0){\n                  this.savePostImage(post.postId, fileName, fileString);\n                }\n                else{\n                  console.error('Post Image Failed to upload');\n                }\n            },\n          error => {\n            console.log('error occured while saving post', error);\n            this.authService.logout();\n          }\n        );\n\n    }\n\n    savePostImage(postId: number, fileName: string, fileString: string){\n      // console.log(\"Image string data \", fileString)\n      const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n      this.http.post(this.postsAPI + 'imageUpload', {'postId': postId, 'fileName': fileName, 'imageStringData': fileString}, {headers: httpHeaders, responseType: 'text'}).subscribe(\n        (imagePath: string) => {\n          console.log('Image Path: ', imagePath);\n        },\n        error => {\n          console.error(\"Something went wrong while storing image\");\n          this.authService.logout();\n        }\n      );\n    }\n\n\n    // fetches all posts from API and saves in posts array locally\n    // If anything goes wrong authService.logout() is called\n    fetchPosts(fire: string) {\n        const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n        this.http.get(this.postsAPI + 'all', {headers: httpHeaders}).subscribe(\n          (posts: Post[]) => {\n            this.posts = posts;\n            if(fire === 'GET_ALL_POSTS'){\n              this.postsFetched.next(true);\n            }\n            else if(fire === 'NEW_POST_ADDED'){\n              this.postAdded.next(this.posts.slice());\n            }\n          },\n          error => {\n            console.log('error occurred while fetching posts', error);\n            if(fire === 'GET_ALL_POSTS'){\n              this.postsFetched.next(false);\n            }\n            this.authService.logout();\n          }\n        );\n    }\n\n    // Returns all posts slice\n    getAllPosts() {\n      return this.posts.slice();\n    }\n\n    // Fetches single posts based on its postId from API server\n    getPostById(id: number) {\n        const httpHeaders = new HttpHeaders({'Authorization' : this.authService.token});\n        return this.http.get(this.postsAPI + 'post/' + id, {headers: httpHeaders});\n    }\n\n    // Returns total number of posts count\n    getTotalPostCount() {\n      return this.posts.length;\n    }\n\n\n\n}\n","module.exports = \".list-group-item{\\n    height: 130px;\\n    background: transparent;\\n    color: #adadad;\\n    padding: 10px 60px 40px 40px;\\n    border: 1px solid #464646;\\n    cursor: pointer;\\n    border-radius: 5px;\\n    outline: none;\\n}\\n\\n.list-group-item hr{\\n    border: 1px solid #464646;\\n    margin-top: 45px;\\n    margin-bottom: 10px;\\n}\\n\\n.user-name{\\n    display: inline;\\n}\\n\\n.user-img {\\n    width: 30px;\\n    height: 30px;\\n    border-radius: 25px;\\n}\\n\\n.post-teaser{\\n    padding: 5px 35px;\\n}\\n\\n.list-group-item.active, .list-group-item.active:focus, .list-group-item.active:hover {\\n  z-index: 2;\\n  color: #fff;\\n  background-color: #337ab7;\\n  border-color: #337ab7;\\n}\\n\\n.list-group-item:hover{\\n  background: #1a2036;\\n}\\n\"","module.exports = \"<li class=\\\"list-group-item\\\" [routerLink] = \\\"['/posts', post.postId]\\\"\\nrouterLinkActive=\\\"active\\\">\\n  <div class=\\\"pull-left\\\">\\n      <img class=\\\"user-img\\\" src=\\\"assets/images/seeth.jpg\\\">\\n      &nbsp;&nbsp;\\n      <h4 class=\\\"user-name\\\">{{ post.postedByUserId }}</h4>\\n      <br>\\n      <h6>{{ post.postCreatedOn }}</h6>\\n  </div>\\n  <br>\\n  <hr>\\n  <div class=\\\"post-teaser\\\">\\n    <p>{{ post.postDetails  | shorten:50 }}</p>\\n  </div>\\n</li><br>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../../../posts.model';\nimport { post } from 'selenium-webdriver/http';\n\n@Component({\n  selector: 'app-post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.css']\n})\nexport class PostItemComponent implements OnInit {\n\n    // Gets a post Item for every iteration from parent component\n    // tslint:disable-next-line:no-input-rename\n    @Input('postItem') post: Post;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\">\\n  <app-post-item *ngFor=\\\"let post of posts\\\" [postItem]=\\\"post\\\"></app-post-item>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { PostServices } from '../../posts.service';\nimport { Subscription } from 'rxjs';\nimport { Post } from '../../posts.model';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  posts = []; // Stores all Posts fetched from post service\n  postAddedSubscription: Subscription;\n  postFetchedSubscription: Subscription;\n\n\n  constructor(private postServices: PostServices) { }\n\n  ngOnInit() {\n    // Works when postFetched is fired when all posts are loaded from API\n    this.postFetchedSubscription = this.postServices.postsFetched.subscribe(\n      (postsFetched: boolean) => {\n        if (postsFetched) {\n          this.posts = this.postServices.getAllPosts();\n        } else {\n          this.posts = [];\n        }\n      }\n    );\n\n    // Works when a new post added to API. Refresh the posts array locally\n    this.postAddedSubscription = this.postServices.postAdded.subscribe(\n      (posts: Post[]) => {\n        // console.log(\"Its fired\");\n        this.posts = posts;\n      }\n    );\n\n    // Call service to fetch posts from API\n    this.postServices.fetchPosts('GET_ALL_POSTS');\n  }\n\n}\n","module.exports = \".show-posts{\\n    background: #101833;\\n    height: 400px;\\n    width: 100%;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    margin-bottom: 0;\\n}\\n\\n.posts-container{\\n    padding-top: 20px;\\n}\\n\\n.show-posts:hover {\\n    overflow-y: scroll;\\n}\\n\"","module.exports = \"<div class=\\\"container show-posts\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 posts-container\\\">\\n      <app-post-list></app-post-list>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-show-post',\n  templateUrl: './show-post.component.html',\n  styleUrls: ['./show-post.component.css']\n})\nexport class ShowPostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#post-create{\\n    width: 100%;\\n    height: 70px;\\n    background: #1e2746;\\n    border-radius: 10px 10px 0px 0px;\\n    padding: 16px 20px;\\n    color: #a0adad;\\n    margin-bottom: 5px;\\n}\\n\\n.post-textarea{\\n    width: 100%;\\n    height: 250px;\\n    background: #1e2642;\\n    padding: 60px 60px;\\n    font-size: 25px;\\n    color: white;\\n    border: none;\\n    resize: none;\\n    outline: none;\\n}\\n\\n#loaded-img-name{\\n    color: white;\\n    background: green;\\n    width: -webkit-max-content;\\n    width: -moz-max-content;\\n    width: max-content;\\n    padding: 5px 0px 5px 25px;\\n    border-radius: 20px;\\n}\\n\\n#del-post-img{\\n    cursor: pointer;\\n    color: black;\\n    background: white;\\n    font-size: 15px;\\n    padding: 0px 3px;\\n    margin-left: 30px;\\n    margin-right: 15px;\\n    border-radius: 20px;\\n}\\n\\n.post-send {\\n    width: 100%;\\n    height: 55px;\\n    background: #1e2746;\\n    border-radius: 0px 0px 10px 10px;\\n    padding: 20px 1px;\\n}\\n\\ninput[type=file] {\\n    display: none;\\n}\\n\\nlabel{\\n    cursor: pointer;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nli{\\n    float: left;\\n    color: #adadad;\\n    margin-left: 90px;\\n    cursor: pointer;\\n}\\n\\nli:hover {\\n    color: white;\\n}\\n\\n.post-send-img{\\n    width: 50px;\\n    height: 50px;\\n}\\n\"","module.exports = \"<h1 id=\\\"post-create\\\">Create Post</h1>\\n<textarea cols=\\\"30\\\" maxlength=\\\"100\\\" rows=\\\"10\\\" placeholder=\\\"Write something....!!!\\\" class=\\\"post-textarea\\\" [(ngModel)]=\\\"postMessage\\\" (click)=\\\"popup()\\\"></textarea>\\n<p id=\\\"loaded-img-name\\\" *ngIf=\\\"fileName\\\">{{fileName}} <span id=\\\"del-post-img\\\" (click)=\\\"deleteFiles()\\\">&times;</span></p>\\n<div class=\\\"post-send\\\">\\n  <ul>\\n    <li><span class=\\\"glyphicon glyphicon-picture\\\"></span>&nbsp;&nbsp;\\n      <label for=\\\"post-img\\\">Add Photo</label>\\n      <input type=\\\"file\\\" id=\\\"post-img\\\" name=\\\"file\\\" (change)=\\\"getFiles($event)\\\">\\n    </li>\\n    <li><span class=\\\"glyphicon glyphicon-link\\\"></span>&nbsp;&nbsp;Link Address</li>\\n    <li><img src=\\\"assets/images/post-send2.png\\\" class=\\\"post-send-img\\\" (click)=\\\"addPost()\\\"></li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PostServices } from '../posts.service';\nimport { Post } from '../posts.model';\nimport { AuthenticateService } from '../../../authenticate/authenticate.service';\n\n@Component({\n    selector: 'app-write-post',\n    templateUrl: './write-post.component.html',\n    styleUrls: ['./write-post.component.css']\n})\nexport class WritePostComponent implements OnInit {\n\n    postMessage: string; // Two way binded with template post field\n\n    constructor(private postServices: PostServices, private authService: AuthenticateService) { }\n\n    loggedInUser: string; // Stored logged in user name\n\n    files: FileList;\n    filestring: string;\n    fileName: string = '';\n    hasImage = false;\n\n    popupCheck = false;\n\n    ngOnInit() {}\n\n    popup() {\n        this.popupCheck = true;\n    }\n\n\n    // Adds post by creating and sending a post object to postService\n    addPost() {\n        this.loggedInUser =  this.authService.loggedInUser.username;\n        console.log(this.postServices.getTotalPostCount() + 1);\n        this.postServices.savePost(\n            new Post(null,\n            this.loggedInUser,\n            this.postMessage,\n            new Date().getTime(),\n            new Date().getTime(),\n            this.hasImage\n            ), this.fileName, this.filestring\n        );\n        this.postMessage = '';\n        this.deleteFiles();\n    }\n\n    getFiles(event) {\n        console.log(event);\n        this.files = event.target.files;\n        // tslint:disable-next-line:prefer-const\n        let reader = new FileReader();\n        reader.onload = this._handleReaderLoaded.bind(this);\n        reader.readAsBinaryString(this.files[0]);\n        this.fileName = this.files[0].name;\n        this.hasImage = true;\n        console.log(this.files[0].name);\n    }\n\n    _handleReaderLoaded(readerEvt) {\n        const binaryString = readerEvt.target.result;\n        this.filestring = btoa(binaryString);  // Converting binary string data.\n        // console.log(this.filestring);\n   }\n\n   deleteFiles() {\n    this.files = null;\n    this.filestring = null;\n    this.fileName = null;\n    this.hasImage = false;\n   }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  groups works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticateService} from '../authenticate/authenticate.service';\n\n@Injectable()\nexport class AuthenticateGuard implements CanActivate, CanActivateChild {\n\n  constructor(private authService: AuthenticateService, private router: Router) {}\n\n\n  // check whether user is logged in then redirects to request url or else redirects to login\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    console.log('checking is user logged in before going to ', state.url, route.parent);\n    if (this.authService.isUserLoggedIn) {\n      return true;\n    } else {\n      this.router.navigate(['/', 'auth', 'login']);\n      return false;\n    }\n    // return true;\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(childRoute, state);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: \"shorten\",\n})\nexport class ShortenPipe implements PipeTransform {\n\n  transform(value: string, limit: number): any {\n\n      if(value.length > limit){\n        return value.substr(0, limit)+'...';\n      }\n      return value;\n\n  }\n\n}\n","module.exports = \".all-names{\\r\\n    font-size: 14px;\\r\\n    line-height: 18px;\\r\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n    color: grey;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loggedUser != null\\\" class=\\\"user-details-div\\\">\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td class=\\\"all-names\\\">Name</td>\\r\\n                <td class=\\\"all-names\\\">{{ loggedUser.last_name }}  {{ loggedUser.first_name }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"all-names\\\">Email</td>\\r\\n                <td class=\\\"all-names\\\">{{ loggedUser.email }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"all-names\\\">Active</td>\\r\\n                <td class=\\\"all-names\\\">{{ loggedUser.active }}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"loggedUser == null\\\">\\r\\n    <p>No User Logged In</p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../profile.service';\nimport { User } from '../../user-details/user.model';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n\n    loggedUser: User = null;\n\n    constructor(private profileService: ProfileService) { }\n\n    ngOnInit() {\n        this.loggedUser = this.profileService.getAllUserDetails(); // Gets loggedIn user details to display\n    }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  friends works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.css']\n})\nexport class FriendsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  photos works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photos',\n  templateUrl: './photos.component.html',\n  styleUrls: ['./photos.component.css']\n})\nexport class PhotosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".user-posts-container{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.posts-div{\\r\\n    width: 90%;\\r\\n    background: white;\\r\\n    padding: 20px 50px;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 15px;\\r\\n    box-shadow: 5px 5px 15px grey;\\r\\n}\\r\\n\\r\\n.post-user{\\r\\n    font-size: 20px;\\r\\n    font-weight: 900;\\r\\n    color: #365899;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n.post-time{\\r\\n    font-size: 12px;\\r\\n    font-weight: 400;\\r\\n    font-family: monospace;\\r\\n    margin-left: 1px;\\r\\n    color: slategrey;\\r\\n}\\r\\n\\r\\n.post-hr{\\r\\n    margin-bottom: 30px;\\r\\n    border-top: 1px #cacaca solid;\\r\\n    margin-left: -50px;\\r\\n    margin-right: -50px;\\r\\n}\\r\\n\\r\\n.post-msg{\\r\\nfont-size: 20px;\\r\\n    padding: 5px 15px;\\r\\n    font-weight: 500;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"isPostsLoaded\\\" class=\\\"user-posts-container\\\">\\n    <div *ngFor=\\\"let post of usersPosts\\\" class=\\\"posts-div\\\">\\n        <p class=\\\"post-user\\\">{{post.postedByUserId}}</p>\\n        <p class=\\\"post-time\\\">{{post.postCreatedOn}}</p>\\n        <hr class=\\\"post-hr\\\">\\n        <p class=\\\"post-msg\\\">{{post.postDetails}}</p>\\n    </div>\\n</div>\\n<div *ngIf=\\\"!isPostsLoaded\\\">\\n    <p>No Posts to Load</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../profile.service';\nimport { Post } from '../../docker/posts/posts.model';\n\n@Component({\n  selector: 'app-profile-posts',\n  templateUrl: './profile-posts.component.html',\n  styleUrls: ['./profile-posts.component.css']\n})\nexport class ProfilePostsComponent implements OnInit {\n\n  constructor(private profileService: ProfileService) { }\n\n  usersPosts: Post[] = []; // Stores posts models made by loggedIn user\n  isPostsLoaded = false;\n\n  ngOnInit() {\n      // Fires when user posts are loaded\n    this.profileService.isUserPostsLoaded.subscribe(\n        (postsLoaded: boolean) => {\n            if (postsLoaded) {\n                this.isPostsLoaded = true;\n                this.usersPosts = this.profileService.userPosts.slice();\n            } else {\n                this.isPostsLoaded = false;\n                this.usersPosts = [];\n            }\n        }\n    );\n    this.profileService.getAllUserPosts(); // Call API using profileService for user posts\n  }\n\n}\n","module.exports = \"#wall-paper {\\r\\n    height: 450px;\\r\\n    background-image: url('http://wallpapere.org/wp-content/uploads/2012/02/black-and-white-city-night.png');\\r\\n    background-size: cover;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    border: 0;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#profile-div{\\r\\n    position: absolute;\\r\\n    width: 90%;\\r\\n    height: 800px;\\r\\n    left: 5%;\\r\\n    top: 50%;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n#profile-img-div #profile-img {\\r\\n    width: 150px;\\r\\n    height: 150px;\\r\\n    margin-top: -80px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    display: block;\\r\\n    border-radius: 80px;\\r\\n}\\r\\n\\r\\n#profile-div #user-name{\\r\\n    text-align: center;\\r\\n    font-size: xx-large;\\r\\n    font-family: cursive;\\r\\n    font-weight: bolder;\\r\\n}\\r\\n\\r\\n#profile-div #user-bio{\\r\\n    text-align: center;\\r\\n    font-size: medium;\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n#profile-div #profile-sub-div{\\r\\n    width: 90%;\\r\\n    height: 400px;\\r\\n    border: 1px grey solid;\\r\\n    border-radius: 10px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    display: block;\\r\\n    padding-left: 100px;\\r\\n    padding-top: 50px;\\r\\n    overflow: scroll;\\r\\n}\\r\\n\\r\\n.profile-blocks{\\r\\n    width: 100px;\\r\\n    height: 150px;\\r\\n    padding: 40px 0px;\\r\\n    display: inline-block;\\r\\n    margin-left: auto;\\r\\n    margin-right: 15px;\\r\\n    margin-bottom: 20px;\\r\\n    text-align: center;\\r\\n    border-radius: 10px;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.selected-block{\\r\\n    background: #00caaf;\\r\\n    color: white;\\r\\n    box-shadow: -2px 5px 10px 2px #d6d6d6;\\r\\n}\\r\\n\\r\\n#profile-posts{\\r\\n    margin-left: 30%;\\r\\n}\\r\\n\\r\\n.profile-blocks-img{\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n#profile-posts:hover, #profile-about:hover, #profile-friends:hover, #profile-photos:hover{\\r\\n    cursor: pointer;\\r\\n    background: #d27805;\\r\\n    color: white;\\r\\n    box-shadow: -5px 3px 10px 2px #777777;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"contianer\\\">\\n    <div id=\\\"wall-paper\\\"></div>\\n    <div id=\\\"profile-div\\\">\\n        <div id=\\\"profile-img-div\\\">\\n            <img id=\\\"profile-img\\\" src=\\\"assets/images/seeth.jpg\\\">\\n        </div>\\n        <p id=\\\"user-name\\\">D Seethend Reddy</p>\\n        <p id=\\\"user-bio\\\">Any Bio</p>\\n        <div class=\\\"profile-blocks\\\" [ngClass]=\\\"{'selected-block' : selectedBlockName === 'posts'}\\\" id=\\\"profile-posts\\\" [routerLink]=\\\"['posts']\\\" (click)=\\\"selectedBlock('posts')\\\">\\n            <img class=\\\"profile-blocks-img\\\" src=\\\"assets/images/logo2.jpg\\\">\\n            <p class=\\\"profile-block-name\\\">Posts</p>\\n        </div>\\n        <div class=\\\"profile-blocks\\\" [ngClass]=\\\"{'selected-block' : selectedBlockName === 'about'}\\\" id=\\\"profile-about\\\" [routerLink]=\\\"['about']\\\" (click)=\\\"selectedBlock('about')\\\">\\n            <img class=\\\"profile-blocks-img\\\" src=\\\"assets/images/logo2.jpg\\\">\\n            <p class=\\\"profile-block-name\\\">About</p>\\n        </div>\\n        <div class=\\\"profile-blocks\\\" [ngClass]=\\\"{'selected-block' : selectedBlockName === 'friends'}\\\" id=\\\"profile-friends\\\" [routerLink]=\\\"['friends']\\\" (click)=\\\"selectedBlock('friends')\\\">\\n            <img class=\\\"profile-blocks-img\\\" src=\\\"assets/images/logo2.jpg\\\">\\n            <p class=\\\"profile-block-name\\\">Friends</p>\\n        </div>\\n        <div class=\\\"profile-blocks\\\" [ngClass]=\\\"{'selected-block' : selectedBlockName === 'photos'}\\\" id=\\\"profile-photos\\\" [routerLink]=\\\"['photos']\\\" (click)=\\\"selectedBlock('photos')\\\">\\n            <img class=\\\"profile-blocks-img\\\" src=\\\"assets/images/logo2.jpg\\\">\\n            <p class=\\\"profile-block-name\\\">Photos</p>\\n        </div>\\n        \\n        <div id=\\\"profile-sub-div\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n    selectedBlockName = '';\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    /**\n     *\n     * Apply .selected-block CSS for the selected block\n     *\n     */\n    selectedBlock(block: string) {\n        this.selectedBlockName = block;\n        console.log(this.selectedBlockName);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthenticateService } from '../authenticate/authenticate.service';\r\nimport { Post } from '../docker/posts/posts.model';\r\nimport { Subject } from 'rxjs';\r\nimport { User } from '../user-details/user.model';\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n\r\n    constructor(private http: HttpClient, private authService: AuthenticateService) {}\r\n\r\n    postsApi = 'v1/secured/posts/'; // Posts API Url\r\n    userPosts: Post[] = []; // Stores all posts by user\r\n    isUserPostsLoaded = new Subject<boolean>(); // To fire when posts are loaded\r\n\r\n\r\n    loggedInUser: User = null;\r\n\r\n    // API call to get all users posts\r\n    getAllUserPosts(): any {\r\n        const httpHeaders = new HttpHeaders({'Authorization': this.authService.token});\r\n        this.http.get(this.postsApi + 'allusers', {headers: httpHeaders}).subscribe(\r\n            (posts: Post[]) => {\r\n                this.userPosts = posts;\r\n                this.isUserPostsLoaded.next(true);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                this.userPosts = [];\r\n                this.isUserPostsLoaded.next(false);\r\n                this.authService.logout();\r\n            }\r\n        );\r\n    }\r\n\r\n    // Gets user model from authServices\r\n    getAllUserDetails(): any {\r\n        this.loggedInUser = this.authService.getLoggeduser();\r\n        return this.loggedInUser;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<p>\\n  projects works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  settings works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".side-header{\\n    height: 100%;\\n    background-color: #1e2642;\\n    border: none;\\n}\\n\\n.side-header-logo{\\n    width: 100px;\\n    height: 100px;\\n    margin-left: 50px;\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n    cursor: pointer;\\n    border-radius: 50px;\\n}\\n\\n.list-group {\\n    padding-left: 15px;\\n}\\n\\nul li{\\n    background: transparent;\\n    border: none;\\n    color: #adadad;\\n    cursor: pointer;\\n    margin-bottom: 25px;\\n    outline: none;\\n    margin-right: 16px;\\n    border-radius: 3px;\\n}\\n\\n.li-icon{\\n  width: 14px;\\n}\\n\\n.list-group-item.active, .list-group-item.active:focus, .list-group-item.active:hover {\\n  z-index: 2;\\n  color: #fff;\\n  background-color: #337ab7;\\n  border-color: #337ab7;\\n}\\n\\n@media only screen and (max-width: 1050px) {\\n    .side-header {\\n        display: none;\\n    }\\n}\\n\"","module.exports = \"<div class=\\\"side-header\\\">\\n  <img class=\\\"img-responsive side-header-logo\\\" src=\\\"assets/images/logo2.jpg\\\">\\n  <ul class=\\\"list-group list-group-flush\\\">\\n    <li class=\\\"list-group-item\\\" [routerLink] = \\\"['posts']\\\" routerLinkActive=\\\"active\\\" >\\n      <span class=\\\"glyphicon glyphicon-home\\\"></span>&nbsp;&nbsp;Dashboards\\n    </li>\\n    <li class=\\\"list-group-item\\\" [routerLink] = \\\"['discussions', 'topics', 'general']\\\" routerLinkActive=\\\"active\\\">\\n      <img class=\\\"li-icon\\\" src=\\\"https://png.icons8.com/ios/50/B9B9B9/active-directory-filled.png\\\">&nbsp;&nbsp;Discussions\\n    </li>\\n    <li class=\\\"list-group-item\\\" [routerLink] = \\\"['profile']\\\" routerLinkActive=\\\"active\\\">\\n      <span class=\\\"glyphicon glyphicon-user\\\"></span>&nbsp;&nbsp;Profile\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <img class=\\\"li-icon\\\" src=\\\"https://png.icons8.com/ios/50/B9B9B9/groups-filled.png\\\">&nbsp;&nbsp;Groups\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <span class=\\\"glyphicon glyphicon-folder-close\\\"></span>&nbsp;&nbsp;Projects\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <span class=\\\"glyphicon glyphicon-cog\\\"></span>&nbsp;&nbsp;Settings\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-header',\n  templateUrl: './side-header.component.html',\n  styleUrls: ['./side-header.component.css']\n})\nexport class SideHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}